/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.3 at Mon Sep  2 20:25:28 2019. */

#ifndef PB_GSCHUB_GEHUB_MESSAGE_PB_H_INCLUDED
#define PB_GSCHUB_GEHUB_MESSAGE_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _gschub_Letter_Type {
    gschub_Letter_Type_Single = 0,
    gschub_Letter_Type_Group = 1,
    gschub_Letter_Type_Ping = 2
} gschub_Letter_Type;
#define _gschub_Letter_Type_MIN gschub_Letter_Type_Single
#define _gschub_Letter_Type_MAX gschub_Letter_Type_Ping
#define _gschub_Letter_Type_ARRAYSIZE ((gschub_Letter_Type)(gschub_Letter_Type_Ping+1))

/* Struct definitions */
typedef struct _gschub_Letter {
    gschub_Letter_Type type;
    char receiver[33];
    pb_callback_t data;
/* @@protoc_insertion_point(struct:gschub_Letter) */
} gschub_Letter;

typedef PB_BYTES_ARRAY_T(33) gschub_Reply_HMAC_t;
typedef struct _gschub_Reply {
    char sender[33];
    gschub_Reply_HMAC_t HMAC;
    pb_callback_t data;
    int32_t timestamp;
/* @@protoc_insertion_point(struct:gschub_Reply) */
} gschub_Reply;

typedef struct _gschub_Ticket {
    char connID[33];
    char token[257];
/* @@protoc_insertion_point(struct:gschub_Ticket) */
} gschub_Ticket;

/* Default values for struct fields */

/* Initializer values for message structs */
#define gschub_Ticket_init_default               {"", ""}
#define gschub_Letter_init_default               {_gschub_Letter_Type_MIN, "", {{NULL}, NULL}}
#define gschub_Reply_init_default                {"", {0, {0}}, {{NULL}, NULL}, 0}
#define gschub_Ticket_init_zero                  {"", ""}
#define gschub_Letter_init_zero                  {_gschub_Letter_Type_MIN, "", {{NULL}, NULL}}
#define gschub_Reply_init_zero                   {"", {0, {0}}, {{NULL}, NULL}, 0}

/* Field tags (for use in manual encoding/decoding) */
#define gschub_Letter_type_tag                   1
#define gschub_Letter_receiver_tag               2
#define gschub_Letter_data_tag                   3
#define gschub_Reply_sender_tag                  1
#define gschub_Reply_HMAC_tag                    2
#define gschub_Reply_data_tag                    3
#define gschub_Reply_timestamp_tag               4
#define gschub_Ticket_connID_tag                 1
#define gschub_Ticket_token_tag                  2

/* Struct field encoding specification for nanopb */
extern const pb_field_t gschub_Ticket_fields[3];
extern const pb_field_t gschub_Letter_fields[4];
extern const pb_field_t gschub_Reply_fields[5];

/* Maximum encoded size of messages (where known) */
#define gschub_Ticket_size                       295
/* gschub_Letter_size depends on runtime parameters */
/* gschub_Reply_size depends on runtime parameters */

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define GEHUB_MESSAGE_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
